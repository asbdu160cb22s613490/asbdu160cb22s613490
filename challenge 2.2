Certainly, you can achieve this without using `def` functions by directly defining methods inside the class. Here's a Python program that implements the `Player`, `Batsman`, and `Bowler` classes without using `def` functions:

```python
class Player:
    def play(self):
        print("The player is playing cricket.")

class Batsman(Player):
    def play(self):
        print("The batsman is batting.")

class Bowler(Player):
    def play(self):
        print("The bowler is bowling.")

# Create objects of the Batsman and Bowler classes
batsman = Batsman()
bowler = Bowler()

# Call the play() method for each object
batsman.play()
bowler.play()
```

When you run this program, it will create objects of the `Batsman` and `Bowler` classes and call the `play()` method for each object. Here's the expected output:

```
The batsman is batting.
The bowler is bowling.
```
```
           
              